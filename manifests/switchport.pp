# cloudvision::switchport
#
# Copyright
# ---------
#
# Copyright (c) 2017, Arista Networks EOS+
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of Arista Networks nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This type is designed for the users managing a physical server to specify the rack and port to which it is patched and a port-profile to use.
#
# The network team is expected to manage the EOS port configuration templates
#   called by this resource. The network team should also generate a mapping
#   of Rack-ID to switch FQDNs in Hiera (cloudvision::rack_switch_map), the
#   valid port-range for hosts (cloudvision::switchport::host_port_range), and,
#   optionally, update the value for auto_run
#   (cloudvision::switchport::auto_run). When true, auto_run will automatically
#   run any CloudVision Portal tasks generated by changes to a port's
#   configlet. When false, the configlet and device assignments will be
#   managed, but the network team will need to manually start the associated
#   tasks within CloudVision Portal.
#
# @example Usage
#    cloudvision::switchport { 'server3-25-eth0':
#      rack      => 'dc1-B3',
#      port      => '14',
#      template  =>  'cloudvision/single_attached_vlan.erb',
#      variables => { vlan => 123 },
#    }
#
# @example Configuration
#   ---
#   cloudvision::switchport::auto_run: true
#   cloudvision::switchport::host_port_range:
#     min: 4
#     max: 60
#   cloudvision::rack_switch_map:
#     dc1-A1: dc01-A1-tor.example.com
#     dc1-A2: dc01-a2-tor.example.com
#     dc1-B3: dc1-rackb3-tor
#
# @param rack The rack-id where the host is connected
# @param port The switch port number where the host's interface is connected
# @param template The <module>/<filename> of an ERB template (AKA port profile)
#   for this interface.
# @param auto_run Whether CVP tasks generated by this resource will be
#   started automatically. (Default: false)
# @param variables Hash of variables to be used by the specified template
# @param host_port_range Hash containing min & max for the valid host-port
#   range.  This is best stored in Hiera.
# @param rack_switch_map Hash of variables to be used by the specified template
#   range.  This is best stored in Hiera.
#
# @author Arista EOS+ CS <eosplus-dev@arista.com>
# @author Jere Julian <jere@arista.com>
#
define cloudvision::switchport (
  String $rack,
  String $port,
  String $template,
  Boolean $auto_run = false,
  Optional[[Hash]] $variables = {},
  Hash $host_port_range,
  Hash $rack_switch_map,
){
  $port_range = $host_port_range
  $rack_map = $rack_switch_map

  $portnum = $port.scanf('%i') |$pval| {
      unless $pval[0] =~ Integer {
        fail "Invalid network port: ${pval[0]}"
      }
      # Check if portnum is within a valid range
      unless ($pval[0] >= $port_range[min]) and ($pval[0] <= $port_range[max]) {
        fail "Only ports 1-20 may be used. Requested: ${pval[0]}"
      }
      $pval[0]
  }

  $host = $title

  $tor = $rack_map[$rack]
  $configlet = "${tor}-port-${portnum}"
  cloudvision_configlet { $configlet:
    content    => template($template),
    # template "profile/esx_host.erb" loads
    # file: $environment/modules/profile/templates/esx_host.erb
    containers => [$tor],
    auto_run   => $auto_run,
  }

}
